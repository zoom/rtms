name: CI/CD Pipeline

on:
  push:
    branches: [ "main", "dev" ]
  pull_request:
    branches: [ "main", "dev" ]

permissions:
  contents: read
  pages: write
  id-token: write

jobs:
  # Build and test the JavaScript/Node.js components
  test-js:
    name: Build and Test JavaScript
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Docker Setup Compose
      uses: docker/setup-compose-action@v1.1.0
      
    - name: Build JavaScript components
      run: docker compose up js
      
    - name: Run JavaScript tests
      run: docker compose up test-js
      

  # Build and test Python components
  # test-py:
  #   name: Build and Test Python
  #   runs-on: ubuntu-latest
    
  #   steps:
  #   - name: Checkout code
  #     uses: actions/checkout@v4
      
  #   - name: Docker Setup Compose
  #     uses: docker/setup-compose-action@v1.1.0
      
  #   - name: Build Python components
  #     run: docker compose up py
      
  #   - name: Run Python tests
  #     run: docker compose up test-py
      
  #   - name: Upload test results
  #     uses: actions/upload-artifact@v4
  #     if: always()
  #     with:
  #       name: py-test-results
  #       path: |
  #         logs/
  #         test-results/
  #       retention-days: 7

  # Build documentation (depends on successful tests)
  build-docs:
    name: Build Documentation
    runs-on: ubuntu-latest
    # Only run on main/master branches and if tests pass
    if: success() && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master')
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Docker Setup Compose
      uses: docker/setup-compose-action@v1.1.0
      
    - name: Build all documentation
      run: docker compose run --rm docs-js
      
    - name: Setup docs structure
      run: |
        mkdir -p docs
        cp .github/docs-template/index.html docs/ || echo "No template found"
        
    - name: Upload documentation artifact
      uses: actions/upload-artifact@v4
      with:
        name: documentation
        path: ./docs
        retention-days: 30

  # Deploy documentation to GitHub Pages
  deploy-docs:
    name: Deploy Documentation
    runs-on: ubuntu-latest
    needs: [build-docs]
    # Only deploy from main/master branch
    if: success() && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master')
    
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
      
    steps:
    - name: Download documentation artifact
      uses: actions/download-artifact@v4
      with:
        name: documentation
        path: ./docs
        
    - name: Setup Pages
      uses: actions/configure-pages@v3
      
    - name: Upload to GitHub Pages
      uses: actions/upload-pages-artifact@v2
      with:
        path: './docs'
        
    - name: Deploy to GitHub Pages
      id: deployment
      uses: actions/deploy-pages@v2